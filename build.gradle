group 'net.dankito.readability4j'
version '1.0.9-SNAPSHOT'
def mavenArtifactId = "readability4j"

buildscript {
    ext {
        kotlin_version = '1.3.72'

        slf4jVersion = '1.7.25'

        jsoupVersion = '1.11.2'

        jacksonVersion = '2.9.2'

        logbackVersion = '1.2.3'

        diffUtilsVersion = '2.2'

        okHttpVersion = '3.9.1'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.10.0"
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'

apply plugin: 'maven'
apply plugin: 'signing'

// So after executing uploadArchives staged repository can be closed and released by executing closeAndReleaseRepository
apply plugin: 'io.codearte.nexus-staging'


sourceCompatibility = 1.7 // for Android use compatibility with Java 7

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "org.slf4j:slf4j-api:$slf4jVersion"

    compile "org.jsoup:jsoup:$jsoupVersion"


    testCompile "junit:junit:4.12"

    testCompile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testCompile "com.github.wumpz:diffutils:$diffUtilsVersion"

    testCompile "com.squareup.okhttp3:okhttp:$okHttpVersion"

    testCompile "ch.qos.logback:logback-core:$logbackVersion"
    testCompile "ch.qos.logback:logback-classic:$logbackVersion"
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}



/*          publish to maven central            */

// set ossrhUsername and ossrhPassword in your gradle.properties (in ~/.gradle/gradle.properties or project's gradle.properties)
def areOssrhPropertiesSet = isPropertySet('ossrhUsername') && isPropertySet('ossrhPassword')

def isPropertySet(propertyName) {
    return properties[propertyName] != null &&  ! (properties[propertyName] as String).isEmpty()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository url: repositories.mavenLocal().url

            if (areOssrhPropertiesSet) {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            pom.project {
                name mavenArtifactId
                artifactId = mavenArtifactId
                packaging 'jar'
                // optionally artifactId can be defined here
                description "A Kotlin port of Mozilla‘s Readability. It extracts a website‘s relevant content and removes all clutter from it."
                url 'https://github.com/dankito/Readability4J'

                scm {
                    connection 'scm:git:git://github.com/dankito/Readability4J.git'
                    developerConnection 'scm:git:git@github.com:dankito/Readability4J.git'
                    url 'https://github.com/dankito/Readability4J'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'dankito'
                        name 'Christian Dankl'
                        email 'maven@dankito.net'
                    }
                }
            }
        }
    }
}